# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MWiqLSiRXu-Io7_0Ioiqvc2GJDZfZNdX
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_regression

X, y = make_regression(n_samples = 1000, n_features = 1, n_targets = 1, noise = 10)

plt.scatter(X, y, marker='x', label='y')
plt.xlabel('X(Feature)')
plt.ylabel('Y(target)')
plt.show()

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, train_size = 0.80, random_state = 1)

print("Shape of X_train " + str(X_train.shape))
print("Shape of X_test " + str(X_test.shape))
print("Shape of y_train " + str(y_train.shape))
print("Shape of y+test " + str(y_test.shape))

#Sum(every_dataset)(y_truth - pred_target)^2

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import math

Lmodel = LinearRegression()

model = Lmodel.fit(X_train, y_train)

pred_train = model.predict(X_train)

print(math.sqrt(mean_squared_error(y_train, pred_train)))

import numpy as np

np.sqrt(np.sum((y_train-pred_train)**2)/len(y_train))

pred_test = model.predict(X_test)
print(math.sqrt(mean_squared_error(y_test, pred_test)))

plt.scatter(X_test, y_test, marker='o', label='y')
plt.xlabel('X')
plt.ylabel('y')
plt.show()

plt.scatter(X_test, y_test, marker='o', label='y')
plt.plot(X_test, pred_test, color = 'Red', linewidth = 3)
plt.xlabel('X')
plt.ylabel('y')
plt.show()